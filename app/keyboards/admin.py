"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π —á–∞—Å—Ç–∏
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


class AdminKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏"""
    
    @staticmethod
    def main_admin_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="üìä –†–∞—Å—Å—ã–ª–∫–∞",
            callback_data="admin_broadcast"
        ))
        builder.add(InlineKeyboardButton(
            text="üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ",
            callback_data="admin_invite"
        ))
        builder.add(InlineKeyboardButton(
            text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            callback_data="admin_users"
        ))
        builder.add(InlineKeyboardButton(
            text="üìö –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (/docs_store)",
            callback_data="noop_docs_store"
        ))
        builder.add(InlineKeyboardButton(
            text="‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å PDF (/docs_upload)",
            callback_data="noop_docs_upload"
        ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def broadcast_confirm(message_count: int) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text=f"‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å ({message_count} –ø–æ–ª—å–∑.)",
            callback_data="broadcast_confirm_yes"
        ))
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="broadcast_confirm_no"
        ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def broadcast_add_button() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∫ —Ä–∞—Å—Å—ã–ª–∫–µ"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É",
            callback_data="broadcast_add_button"
        ))
        
        builder.add(InlineKeyboardButton(
            text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ –∫–Ω–æ–ø–∫–∏",
            callback_data="broadcast_no_button"
        ))
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="broadcast_cancel"
        ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def broadcast_button_confirm() -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data="broadcast_button_confirm"
        ))
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="broadcast_cancel"
        ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def create_custom_button(text: str, url: str) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text=text,
            url=url
        ))
        
        return builder.as_markup() 

    @staticmethod
    def users_list(users: list[tuple[int, str]]) -> InlineKeyboardMarkup:
        """–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫–Ω–æ–ø–∫–∏)"""
        builder = InlineKeyboardBuilder()
        for user_id, title in users:
            builder.add(InlineKeyboardButton(
                text=title,
                callback_data=f"admin_user_{user_id}"
            ))
        builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main"))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def user_card_actions(user_id: int, *, is_active: bool, is_admin: bool) -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        builder = InlineKeyboardBuilder()
        if is_active:
            builder.add(InlineKeyboardButton(text="üö´ –ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø", callback_data=f"admin_user_revoke_{user_id}"))
        else:
            builder.add(InlineKeyboardButton(text="‚úÖ –í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø", callback_data=f"admin_user_grant_{user_id}"))
        if not is_admin:
            builder.add(InlineKeyboardButton(text="‚≠ê –°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º", callback_data=f"admin_user_make_admin_{user_id}"))
        builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_users"))
        builder.adjust(1)
        return builder.as_markup()